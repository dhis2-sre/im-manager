consumes:
    - application/json
definitions:
    DeletedAt:
        $ref: '#/definitions/NullTime'
    DeployInstanceRequest:
        properties:
            groupName:
                type: string
                x-go-name: Group
            name:
                type: string
                x-go-name: Name
            optionalParameters:
                items:
                    $ref: '#/definitions/InstanceOptionalParameter'
                type: array
                x-go-name: OptionalParameters
            presetInstance:
                format: uint64
                type: integer
                x-go-name: PresetInstance
            requiredParameters:
                items:
                    $ref: '#/definitions/InstanceRequiredParameter'
                type: array
                x-go-name: RequiredParameters
            sourceInstance:
                format: uint64
                type: integer
                x-go-name: SourceInstance
            stackName:
                type: string
                x-go-name: Stack
        type: object
        x-go-package: github.com/dhis2-sre/im-manager/pkg/instance
    GroupWithInstances:
        properties:
            Hostname:
                type: string
            Instances:
                items:
                    $ref: '#/definitions/Instance'
                type: array
            Name:
                type: string
        type: object
        x-go-package: github.com/dhis2-sre/im-manager/pkg/instance
    Instance:
        properties:
            CreatedAt:
                format: date-time
                type: string
            DeletedAt:
                $ref: '#/definitions/DeletedAt'
            DeployLog:
                type: string
            GroupName:
                type: string
            ID:
                format: uint64
                type: integer
            Name:
                type: string
            Preset:
                type: boolean
            PresetID:
                format: uint64
                type: integer
            StackName:
                type: string
            UpdatedAt:
                format: date-time
                type: string
            UserID:
                format: uint64
                type: integer
            optionalParameters:
                items:
                    $ref: '#/definitions/InstanceOptionalParameter'
                type: array
                x-go-name: OptionalParameters
            requiredParameters:
                items:
                    $ref: '#/definitions/InstanceRequiredParameter'
                type: array
                x-go-name: RequiredParameters
        type: object
        x-go-package: github.com/dhis2-sre/im-manager/pkg/model
    InstanceOptionalParameter:
        properties:
            name:
                description: 'TODO: Rename StackOptionalParameterID to Name'
                type: string
                x-go-name: StackOptionalParameterID
            value:
                type: string
                x-go-name: Value
        type: object
        x-go-package: github.com/dhis2-sre/im-manager/pkg/model
    InstanceRequiredParameter:
        properties:
            name:
                description: 'TODO: Rename StackRequiredParameterID to Name'
                type: string
                x-go-name: StackRequiredParameterID
            value:
                type: string
                x-go-name: Value
        type: object
        x-go-package: github.com/dhis2-sre/im-manager/pkg/model
    Model:
        description: |-
            type User struct {
            gorm.Model
            }
        properties:
            CreatedAt:
                format: date-time
                type: string
            DeletedAt:
                $ref: '#/definitions/DeletedAt'
            ID:
                format: uint64
                type: integer
            UpdatedAt:
                format: date-time
                type: string
        title: |-
            Model a basic GoLang struct which includes the following fields: ID, CreatedAt, UpdatedAt, DeletedAt
            It may be embedded into your model or you may build your own model without it
        type: object
        x-go-package: gorm.io/gorm
    NullTime:
        description: |-
            NullTime implements the Scanner interface so
            it can be used as a scan destination, similar to NullString.
        properties:
            Time:
                format: date-time
                type: string
            Valid:
                type: boolean
        title: NullTime represents a time.Time that may be null.
        type: object
        x-go-package: database/sql
    Response:
        properties:
            status:
                type: string
                x-go-name: Status
        type: object
        x-go-package: github.com/dhis2-sre/im-manager/pkg/health
    Stack:
        properties:
            CreatedAt:
                format: date-time
                type: string
            DeletedAt:
                $ref: '#/definitions/DeletedAt'
            HostnamePattern:
                type: string
            HostnameVariable:
                type: string
            UpdatedAt:
                format: date-time
                type: string
            instances:
                items:
                    $ref: '#/definitions/Instance'
                type: array
                x-go-name: Instances
            name:
                type: string
                x-go-name: Name
            optionalParameters:
                items:
                    $ref: '#/definitions/StackOptionalParameter'
                type: array
                x-go-name: OptionalParameters
            requiredParameters:
                items:
                    $ref: '#/definitions/StackRequiredParameter'
                type: array
                x-go-name: RequiredParameters
        type: object
        x-go-package: github.com/dhis2-sre/im-manager/pkg/model
    StackOptionalParameter:
        properties:
            Consumed:
                type: boolean
            DefaultValue:
                type: string
            Name:
                type: string
            StackName:
                type: string
        type: object
        x-go-package: github.com/dhis2-sre/im-manager/pkg/model
    StackRequiredParameter:
        properties:
            Consumed:
                type: boolean
            Name:
                type: string
            StackName:
                type: string
        type: object
        x-go-package: github.com/dhis2-sre/im-manager/pkg/model
    UpdateInstanceRequest:
        properties:
            optionalParameters:
                items:
                    $ref: '#/definitions/InstanceOptionalParameter'
                type: array
                x-go-name: OptionalParameters
            requiredParameters:
                items:
                    $ref: '#/definitions/InstanceRequiredParameter'
                type: array
                x-go-name: RequiredParameters
        type: object
        x-go-package: github.com/dhis2-sre/im-manager/pkg/instance
info:
    contact:
        email: info@dhis2.org
        url: https://github.com/dhis2-sre/im-manager
    description: Manager Service is part of the Instance Manager environment
    license:
        name: TODO
    title: Instance Manager Manager Service.
    version: 0.1.0
paths:
    /health:
        get:
            description: Show service health status
            operationId: health
            responses:
                "200":
                    $ref: '#/responses/Response'
            summary: Health status
    /instances:
        get:
            description: List all instances accessible by the user
            operationId: listInstances
            responses:
                "200":
                    $ref: '#/responses/GroupWithInstances'
                "401":
                    $ref: '#/responses/Error'
                "403":
                    $ref: '#/responses/Error'
                "415":
                    $ref: '#/responses/Error'
            security:
                - oauth2: []
            summary: List instances
        post:
            description: Deploy an instance...
            operationId: deployInstance
            parameters:
                - description: Deploy instance request body parameter
                  in: body
                  name: Payload
                  required: true
                  schema:
                    $ref: '#/definitions/DeployInstanceRequest'
                - description: preset
                  in: query
                  name: preset
                  type: string
                  x-go-name: Preset
            responses:
                "201":
                    description: Instance
                    schema:
                        $ref: '#/definitions/Instance'
                "401":
                    $ref: '#/responses/Error'
                "403":
                    $ref: '#/responses/Error'
                "404":
                    $ref: '#/responses/Error'
                "415":
                    $ref: '#/responses/Error'
            security:
                - oauth2: []
            summary: Deploy instance
    /instances-name-to-id/{groupName}/{instanceName}:
        get:
            description: Find instance id by name and group name
            operationId: instanceNameToId
            parameters:
                - in: path
                  name: groupName
                  required: true
                  type: string
                  x-go-name: GroupName
                - in: path
                  name: instanceName
                  required: true
                  type: string
                  x-go-name: InstanceName
            responses:
                "200":
                    description: Instance
                    schema:
                        $ref: '#/definitions/Instance'
                "401":
                    $ref: '#/responses/Error'
                "403":
                    $ref: '#/responses/Error'
                "404":
                    $ref: '#/responses/Error'
                "415":
                    $ref: '#/responses/Error'
            security:
                - oauth2: []
            summary: Find an instance
    /instances/{id}:
        delete:
            description: Delete an instance by id
            operationId: deleteInstance
            parameters:
                - format: uint64
                  in: path
                  name: id
                  required: true
                  type: integer
                  x-go-name: ID
            responses:
                "202":
                    description: ""
                "401":
                    $ref: '#/responses/Error'
                "403":
                    $ref: '#/responses/Error'
                "404":
                    $ref: '#/responses/Error'
                "415":
                    $ref: '#/responses/Error'
            security:
                - oauth2: []
            summary: Delete instance
        get:
            description: Find an instance by id
            operationId: findById
            parameters:
                - format: uint64
                  in: path
                  name: id
                  required: true
                  type: integer
                  x-go-name: ID
            responses:
                "200":
                    description: Instance
                    schema:
                        $ref: '#/definitions/Instance'
                "401":
                    $ref: '#/responses/Error'
                "403":
                    $ref: '#/responses/Error'
                "404":
                    $ref: '#/responses/Error'
                "415":
                    $ref: '#/responses/Error'
            security:
                - oauth2: []
            summary: Find instance
        put:
            description: Update an instance...
            operationId: updateInstance
            parameters:
                - format: uint64
                  in: path
                  name: id
                  required: true
                  type: integer
                  x-go-name: ID
                - description: Update instance request body parameter
                  in: body
                  name: Payload
                  required: true
                  schema:
                    $ref: '#/definitions/UpdateInstanceRequest'
            responses:
                "204":
                    description: Instance
                    schema:
                        $ref: '#/definitions/Instance'
                "401":
                    $ref: '#/responses/Error'
                "403":
                    $ref: '#/responses/Error'
                "404":
                    $ref: '#/responses/Error'
                "415":
                    $ref: '#/responses/Error'
            security:
                - oauth2: []
            summary: Update instance
    /instances/{id}/logs:
        get:
            description: Stream instance logs in real time
            operationId: instanceLogs
            parameters:
                - format: uint64
                  in: path
                  name: id
                  required: true
                  type: integer
                  x-go-name: ID
                - description: selector
                  in: query
                  name: selector
                  type: string
                  x-go-name: Selector
            responses:
                "200":
                    $ref: '#/responses/InstanceLogsResponse'
                "401":
                    $ref: '#/responses/Error'
                "403":
                    $ref: '#/responses/Error'
                "404":
                    $ref: '#/responses/Error'
                "415":
                    $ref: '#/responses/Error'
            security:
                - oauth2: []
            summary: Stream logs
    /instances/{id}/parameters:
        get:
            description: Find instance by id with decrypted parameters
            operationId: findByIdDecrypted
            parameters:
                - format: uint64
                  in: path
                  name: id
                  required: true
                  type: integer
                  x-go-name: ID
            responses:
                "200":
                    description: Instance
                    schema:
                        $ref: '#/definitions/Instance'
                "401":
                    $ref: '#/responses/Error'
                "403":
                    $ref: '#/responses/Error'
                "404":
                    $ref: '#/responses/Error'
                "415":
                    $ref: '#/responses/Error'
            security:
                - oauth2: []
            summary: Find decrypted instance
    /instances/{id}/pause:
        put:
            description: Pause an instance...
            operationId: pauseInstance
            parameters:
                - format: uint64
                  in: path
                  name: id
                  required: true
                  type: integer
                  x-go-name: ID
            responses:
                "202":
                    description: ""
                "401":
                    $ref: '#/responses/Error'
                "403":
                    $ref: '#/responses/Error'
                "404":
                    $ref: '#/responses/Error'
                "415":
                    $ref: '#/responses/Error'
            security:
                - oauth2: []
            summary: Pause instance
    /instances/{id}/restart:
        put:
            description: Restart an instance...
            operationId: restartInstance
            parameters:
                - format: uint64
                  in: path
                  name: id
                  required: true
                  type: integer
                  x-go-name: ID
                - description: selector
                  in: query
                  name: selector
                  type: string
                  x-go-name: Selector
            responses:
                "202":
                    description: ""
                "401":
                    $ref: '#/responses/Error'
                "403":
                    $ref: '#/responses/Error'
                "404":
                    $ref: '#/responses/Error'
                "415":
                    $ref: '#/responses/Error'
            security:
                - oauth2: []
            summary: Restart instance
    /integrations:
        post:
            description: Return integration for a given key
            operationId: postIntegration
            responses:
                "200":
                    $ref: '#/responses/Any'
                "401":
                    $ref: '#/responses/Error'
                "403":
                    $ref: '#/responses/Error'
                "415":
                    $ref: '#/responses/Error'
            security:
                - oauth2: []
            summary: Integration
    /presets:
        get:
            description: List all presets accessible by the user
            operationId: listPresets
            responses:
                "200":
                    $ref: '#/responses/GroupWithInstances'
                "401":
                    $ref: '#/responses/Error'
                "403":
                    $ref: '#/responses/Error'
                "415":
                    $ref: '#/responses/Error'
            security:
                - oauth2: []
            summary: List presets
    /stacks:
        get:
            description: Find all stacks...
            operationId: stacks
            responses:
                "200":
                    $ref: '#/responses/StacksResponse'
                "401":
                    $ref: '#/responses/Error'
                "403":
                    $ref: '#/responses/Error'
                "404":
                    $ref: '#/responses/Error'
                "415":
                    $ref: '#/responses/Error'
            security:
                - oauth2: []
            summary: Find all stacks
    /stacks/{name}:
        get:
            description: Find stack by name
            operationId: stack
            parameters:
                - in: path
                  name: name
                  required: true
                  type: string
                  x-go-name: Name
            responses:
                "200":
                    $ref: '#/responses/StackResponse'
                "401":
                    $ref: '#/responses/Error'
                "403":
                    $ref: '#/responses/Error'
                "404":
                    $ref: '#/responses/Error'
                "415":
                    $ref: '#/responses/Error'
            security:
                - oauth2: []
            summary: Find stack
produces:
    - application/json
responses:
    Any:
        description: ""
        schema: {}
    Error:
        description: ""
    GroupWithInstances:
        description: ""
        schema:
            items:
                $ref: '#/definitions/GroupWithInstances'
            type: array
    InstanceLogsResponse:
        description: ""
    Response:
        description: ""
        schema:
            $ref: '#/definitions/Response'
    StackResponse:
        description: ""
        schema:
            $ref: '#/definitions/Stack'
    StacksResponse:
        description: ""
        schema:
            items:
                $ref: '#/definitions/Stack'
            type: array
securityDefinitions:
    oauth2:
        flow: password
        tokenUrl: /not-valid--endpoint-is-served-from-the-im-user-service
        type: oauth2
swagger: "2.0"
