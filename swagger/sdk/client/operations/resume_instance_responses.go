// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// ResumeInstanceReader is a Reader for the ResumeInstance structure.
type ResumeInstanceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ResumeInstanceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewResumeInstanceAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewResumeInstanceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewResumeInstanceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewResumeInstanceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewResumeInstanceUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewResumeInstanceAccepted creates a ResumeInstanceAccepted with default headers values
func NewResumeInstanceAccepted() *ResumeInstanceAccepted {
	return &ResumeInstanceAccepted{}
}

/*
ResumeInstanceAccepted describes a response with status code 202, with default header values.

ResumeInstanceAccepted resume instance accepted
*/
type ResumeInstanceAccepted struct {
}

// IsSuccess returns true when this resume instance accepted response has a 2xx status code
func (o *ResumeInstanceAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this resume instance accepted response has a 3xx status code
func (o *ResumeInstanceAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this resume instance accepted response has a 4xx status code
func (o *ResumeInstanceAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this resume instance accepted response has a 5xx status code
func (o *ResumeInstanceAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this resume instance accepted response a status code equal to that given
func (o *ResumeInstanceAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the resume instance accepted response
func (o *ResumeInstanceAccepted) Code() int {
	return 202
}

func (o *ResumeInstanceAccepted) Error() string {
	return fmt.Sprintf("[PUT /instances/{id}/resume][%d] resumeInstanceAccepted ", 202)
}

func (o *ResumeInstanceAccepted) String() string {
	return fmt.Sprintf("[PUT /instances/{id}/resume][%d] resumeInstanceAccepted ", 202)
}

func (o *ResumeInstanceAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResumeInstanceUnauthorized creates a ResumeInstanceUnauthorized with default headers values
func NewResumeInstanceUnauthorized() *ResumeInstanceUnauthorized {
	return &ResumeInstanceUnauthorized{}
}

/*
ResumeInstanceUnauthorized describes a response with status code 401, with default header values.

ResumeInstanceUnauthorized resume instance unauthorized
*/
type ResumeInstanceUnauthorized struct {
}

// IsSuccess returns true when this resume instance unauthorized response has a 2xx status code
func (o *ResumeInstanceUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this resume instance unauthorized response has a 3xx status code
func (o *ResumeInstanceUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this resume instance unauthorized response has a 4xx status code
func (o *ResumeInstanceUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this resume instance unauthorized response has a 5xx status code
func (o *ResumeInstanceUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this resume instance unauthorized response a status code equal to that given
func (o *ResumeInstanceUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the resume instance unauthorized response
func (o *ResumeInstanceUnauthorized) Code() int {
	return 401
}

func (o *ResumeInstanceUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /instances/{id}/resume][%d] resumeInstanceUnauthorized ", 401)
}

func (o *ResumeInstanceUnauthorized) String() string {
	return fmt.Sprintf("[PUT /instances/{id}/resume][%d] resumeInstanceUnauthorized ", 401)
}

func (o *ResumeInstanceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResumeInstanceForbidden creates a ResumeInstanceForbidden with default headers values
func NewResumeInstanceForbidden() *ResumeInstanceForbidden {
	return &ResumeInstanceForbidden{}
}

/*
ResumeInstanceForbidden describes a response with status code 403, with default header values.

ResumeInstanceForbidden resume instance forbidden
*/
type ResumeInstanceForbidden struct {
}

// IsSuccess returns true when this resume instance forbidden response has a 2xx status code
func (o *ResumeInstanceForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this resume instance forbidden response has a 3xx status code
func (o *ResumeInstanceForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this resume instance forbidden response has a 4xx status code
func (o *ResumeInstanceForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this resume instance forbidden response has a 5xx status code
func (o *ResumeInstanceForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this resume instance forbidden response a status code equal to that given
func (o *ResumeInstanceForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the resume instance forbidden response
func (o *ResumeInstanceForbidden) Code() int {
	return 403
}

func (o *ResumeInstanceForbidden) Error() string {
	return fmt.Sprintf("[PUT /instances/{id}/resume][%d] resumeInstanceForbidden ", 403)
}

func (o *ResumeInstanceForbidden) String() string {
	return fmt.Sprintf("[PUT /instances/{id}/resume][%d] resumeInstanceForbidden ", 403)
}

func (o *ResumeInstanceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResumeInstanceNotFound creates a ResumeInstanceNotFound with default headers values
func NewResumeInstanceNotFound() *ResumeInstanceNotFound {
	return &ResumeInstanceNotFound{}
}

/*
ResumeInstanceNotFound describes a response with status code 404, with default header values.

ResumeInstanceNotFound resume instance not found
*/
type ResumeInstanceNotFound struct {
}

// IsSuccess returns true when this resume instance not found response has a 2xx status code
func (o *ResumeInstanceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this resume instance not found response has a 3xx status code
func (o *ResumeInstanceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this resume instance not found response has a 4xx status code
func (o *ResumeInstanceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this resume instance not found response has a 5xx status code
func (o *ResumeInstanceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this resume instance not found response a status code equal to that given
func (o *ResumeInstanceNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the resume instance not found response
func (o *ResumeInstanceNotFound) Code() int {
	return 404
}

func (o *ResumeInstanceNotFound) Error() string {
	return fmt.Sprintf("[PUT /instances/{id}/resume][%d] resumeInstanceNotFound ", 404)
}

func (o *ResumeInstanceNotFound) String() string {
	return fmt.Sprintf("[PUT /instances/{id}/resume][%d] resumeInstanceNotFound ", 404)
}

func (o *ResumeInstanceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResumeInstanceUnsupportedMediaType creates a ResumeInstanceUnsupportedMediaType with default headers values
func NewResumeInstanceUnsupportedMediaType() *ResumeInstanceUnsupportedMediaType {
	return &ResumeInstanceUnsupportedMediaType{}
}

/*
ResumeInstanceUnsupportedMediaType describes a response with status code 415, with default header values.

ResumeInstanceUnsupportedMediaType resume instance unsupported media type
*/
type ResumeInstanceUnsupportedMediaType struct {
}

// IsSuccess returns true when this resume instance unsupported media type response has a 2xx status code
func (o *ResumeInstanceUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this resume instance unsupported media type response has a 3xx status code
func (o *ResumeInstanceUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this resume instance unsupported media type response has a 4xx status code
func (o *ResumeInstanceUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this resume instance unsupported media type response has a 5xx status code
func (o *ResumeInstanceUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this resume instance unsupported media type response a status code equal to that given
func (o *ResumeInstanceUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

// Code gets the status code for the resume instance unsupported media type response
func (o *ResumeInstanceUnsupportedMediaType) Code() int {
	return 415
}

func (o *ResumeInstanceUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /instances/{id}/resume][%d] resumeInstanceUnsupportedMediaType ", 415)
}

func (o *ResumeInstanceUnsupportedMediaType) String() string {
	return fmt.Sprintf("[PUT /instances/{id}/resume][%d] resumeInstanceUnsupportedMediaType ", 415)
}

func (o *ResumeInstanceUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
