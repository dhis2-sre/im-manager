// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dhis2-sre/im-manager/swagger/sdk/models"
)

// FindByIDReader is a Reader for the FindByID structure.
type FindByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FindByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFindByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewFindByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewFindByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewFindByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewFindByIDUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewFindByIDOK creates a FindByIDOK with default headers values
func NewFindByIDOK() *FindByIDOK {
	return &FindByIDOK{}
}

/* FindByIDOK describes a response with status code 200, with default header values.

Instance
*/
type FindByIDOK struct {
	Payload *models.Instance
}

func (o *FindByIDOK) Error() string {
	return fmt.Sprintf("[GET /instances/{id}][%d] findByIdOK  %+v", 200, o.Payload)
}
func (o *FindByIDOK) GetPayload() *models.Instance {
	return o.Payload
}

func (o *FindByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Instance)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFindByIDUnauthorized creates a FindByIDUnauthorized with default headers values
func NewFindByIDUnauthorized() *FindByIDUnauthorized {
	return &FindByIDUnauthorized{}
}

/* FindByIDUnauthorized describes a response with status code 401, with default header values.

FindByIDUnauthorized find by Id unauthorized
*/
type FindByIDUnauthorized struct {
}

func (o *FindByIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /instances/{id}][%d] findByIdUnauthorized ", 401)
}

func (o *FindByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFindByIDForbidden creates a FindByIDForbidden with default headers values
func NewFindByIDForbidden() *FindByIDForbidden {
	return &FindByIDForbidden{}
}

/* FindByIDForbidden describes a response with status code 403, with default header values.

FindByIDForbidden find by Id forbidden
*/
type FindByIDForbidden struct {
}

func (o *FindByIDForbidden) Error() string {
	return fmt.Sprintf("[GET /instances/{id}][%d] findByIdForbidden ", 403)
}

func (o *FindByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFindByIDNotFound creates a FindByIDNotFound with default headers values
func NewFindByIDNotFound() *FindByIDNotFound {
	return &FindByIDNotFound{}
}

/* FindByIDNotFound describes a response with status code 404, with default header values.

FindByIDNotFound find by Id not found
*/
type FindByIDNotFound struct {
}

func (o *FindByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /instances/{id}][%d] findByIdNotFound ", 404)
}

func (o *FindByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFindByIDUnsupportedMediaType creates a FindByIDUnsupportedMediaType with default headers values
func NewFindByIDUnsupportedMediaType() *FindByIDUnsupportedMediaType {
	return &FindByIDUnsupportedMediaType{}
}

/* FindByIDUnsupportedMediaType describes a response with status code 415, with default header values.

FindByIDUnsupportedMediaType find by Id unsupported media type
*/
type FindByIDUnsupportedMediaType struct {
}

func (o *FindByIDUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /instances/{id}][%d] findByIdUnsupportedMediaType ", 415)
}

func (o *FindByIDUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
