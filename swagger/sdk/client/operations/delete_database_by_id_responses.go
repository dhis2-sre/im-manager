// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteDatabaseByIDReader is a Reader for the DeleteDatabaseByID structure.
type DeleteDatabaseByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteDatabaseByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewDeleteDatabaseByIDAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteDatabaseByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteDatabaseByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteDatabaseByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteDatabaseByIDUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteDatabaseByIDAccepted creates a DeleteDatabaseByIDAccepted with default headers values
func NewDeleteDatabaseByIDAccepted() *DeleteDatabaseByIDAccepted {
	return &DeleteDatabaseByIDAccepted{}
}

/*
DeleteDatabaseByIDAccepted describes a response with status code 202, with default header values.

DeleteDatabaseByIDAccepted delete database by Id accepted
*/
type DeleteDatabaseByIDAccepted struct {
}

// IsSuccess returns true when this delete database by Id accepted response has a 2xx status code
func (o *DeleteDatabaseByIDAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete database by Id accepted response has a 3xx status code
func (o *DeleteDatabaseByIDAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete database by Id accepted response has a 4xx status code
func (o *DeleteDatabaseByIDAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete database by Id accepted response has a 5xx status code
func (o *DeleteDatabaseByIDAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this delete database by Id accepted response a status code equal to that given
func (o *DeleteDatabaseByIDAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the delete database by Id accepted response
func (o *DeleteDatabaseByIDAccepted) Code() int {
	return 202
}

func (o *DeleteDatabaseByIDAccepted) Error() string {
	return fmt.Sprintf("[DELETE /databases/{id}][%d] deleteDatabaseByIdAccepted ", 202)
}

func (o *DeleteDatabaseByIDAccepted) String() string {
	return fmt.Sprintf("[DELETE /databases/{id}][%d] deleteDatabaseByIdAccepted ", 202)
}

func (o *DeleteDatabaseByIDAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDatabaseByIDUnauthorized creates a DeleteDatabaseByIDUnauthorized with default headers values
func NewDeleteDatabaseByIDUnauthorized() *DeleteDatabaseByIDUnauthorized {
	return &DeleteDatabaseByIDUnauthorized{}
}

/*
DeleteDatabaseByIDUnauthorized describes a response with status code 401, with default header values.

DeleteDatabaseByIDUnauthorized delete database by Id unauthorized
*/
type DeleteDatabaseByIDUnauthorized struct {
}

// IsSuccess returns true when this delete database by Id unauthorized response has a 2xx status code
func (o *DeleteDatabaseByIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete database by Id unauthorized response has a 3xx status code
func (o *DeleteDatabaseByIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete database by Id unauthorized response has a 4xx status code
func (o *DeleteDatabaseByIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete database by Id unauthorized response has a 5xx status code
func (o *DeleteDatabaseByIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete database by Id unauthorized response a status code equal to that given
func (o *DeleteDatabaseByIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete database by Id unauthorized response
func (o *DeleteDatabaseByIDUnauthorized) Code() int {
	return 401
}

func (o *DeleteDatabaseByIDUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /databases/{id}][%d] deleteDatabaseByIdUnauthorized ", 401)
}

func (o *DeleteDatabaseByIDUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /databases/{id}][%d] deleteDatabaseByIdUnauthorized ", 401)
}

func (o *DeleteDatabaseByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDatabaseByIDForbidden creates a DeleteDatabaseByIDForbidden with default headers values
func NewDeleteDatabaseByIDForbidden() *DeleteDatabaseByIDForbidden {
	return &DeleteDatabaseByIDForbidden{}
}

/*
DeleteDatabaseByIDForbidden describes a response with status code 403, with default header values.

DeleteDatabaseByIDForbidden delete database by Id forbidden
*/
type DeleteDatabaseByIDForbidden struct {
}

// IsSuccess returns true when this delete database by Id forbidden response has a 2xx status code
func (o *DeleteDatabaseByIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete database by Id forbidden response has a 3xx status code
func (o *DeleteDatabaseByIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete database by Id forbidden response has a 4xx status code
func (o *DeleteDatabaseByIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete database by Id forbidden response has a 5xx status code
func (o *DeleteDatabaseByIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete database by Id forbidden response a status code equal to that given
func (o *DeleteDatabaseByIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete database by Id forbidden response
func (o *DeleteDatabaseByIDForbidden) Code() int {
	return 403
}

func (o *DeleteDatabaseByIDForbidden) Error() string {
	return fmt.Sprintf("[DELETE /databases/{id}][%d] deleteDatabaseByIdForbidden ", 403)
}

func (o *DeleteDatabaseByIDForbidden) String() string {
	return fmt.Sprintf("[DELETE /databases/{id}][%d] deleteDatabaseByIdForbidden ", 403)
}

func (o *DeleteDatabaseByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDatabaseByIDNotFound creates a DeleteDatabaseByIDNotFound with default headers values
func NewDeleteDatabaseByIDNotFound() *DeleteDatabaseByIDNotFound {
	return &DeleteDatabaseByIDNotFound{}
}

/*
DeleteDatabaseByIDNotFound describes a response with status code 404, with default header values.

DeleteDatabaseByIDNotFound delete database by Id not found
*/
type DeleteDatabaseByIDNotFound struct {
}

// IsSuccess returns true when this delete database by Id not found response has a 2xx status code
func (o *DeleteDatabaseByIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete database by Id not found response has a 3xx status code
func (o *DeleteDatabaseByIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete database by Id not found response has a 4xx status code
func (o *DeleteDatabaseByIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete database by Id not found response has a 5xx status code
func (o *DeleteDatabaseByIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete database by Id not found response a status code equal to that given
func (o *DeleteDatabaseByIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete database by Id not found response
func (o *DeleteDatabaseByIDNotFound) Code() int {
	return 404
}

func (o *DeleteDatabaseByIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /databases/{id}][%d] deleteDatabaseByIdNotFound ", 404)
}

func (o *DeleteDatabaseByIDNotFound) String() string {
	return fmt.Sprintf("[DELETE /databases/{id}][%d] deleteDatabaseByIdNotFound ", 404)
}

func (o *DeleteDatabaseByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDatabaseByIDUnsupportedMediaType creates a DeleteDatabaseByIDUnsupportedMediaType with default headers values
func NewDeleteDatabaseByIDUnsupportedMediaType() *DeleteDatabaseByIDUnsupportedMediaType {
	return &DeleteDatabaseByIDUnsupportedMediaType{}
}

/*
DeleteDatabaseByIDUnsupportedMediaType describes a response with status code 415, with default header values.

DeleteDatabaseByIDUnsupportedMediaType delete database by Id unsupported media type
*/
type DeleteDatabaseByIDUnsupportedMediaType struct {
}

// IsSuccess returns true when this delete database by Id unsupported media type response has a 2xx status code
func (o *DeleteDatabaseByIDUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete database by Id unsupported media type response has a 3xx status code
func (o *DeleteDatabaseByIDUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete database by Id unsupported media type response has a 4xx status code
func (o *DeleteDatabaseByIDUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete database by Id unsupported media type response has a 5xx status code
func (o *DeleteDatabaseByIDUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this delete database by Id unsupported media type response a status code equal to that given
func (o *DeleteDatabaseByIDUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

// Code gets the status code for the delete database by Id unsupported media type response
func (o *DeleteDatabaseByIDUnsupportedMediaType) Code() int {
	return 415
}

func (o *DeleteDatabaseByIDUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /databases/{id}][%d] deleteDatabaseByIdUnsupportedMediaType ", 415)
}

func (o *DeleteDatabaseByIDUnsupportedMediaType) String() string {
	return fmt.Sprintf("[DELETE /databases/{id}][%d] deleteDatabaseByIdUnsupportedMediaType ", 415)
}

func (o *DeleteDatabaseByIDUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
