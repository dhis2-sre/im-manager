// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DownloadDatabaseReader is a Reader for the DownloadDatabase structure.
type DownloadDatabaseReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DownloadDatabaseReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDownloadDatabaseOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDownloadDatabaseUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDownloadDatabaseForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDownloadDatabaseNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDownloadDatabaseUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDownloadDatabaseOK creates a DownloadDatabaseOK with default headers values
func NewDownloadDatabaseOK() *DownloadDatabaseOK {
	return &DownloadDatabaseOK{}
}

/*
DownloadDatabaseOK describes a response with status code 200, with default header values.

DownloadDatabaseOK download database o k
*/
type DownloadDatabaseOK struct {
	Payload []uint8
}

// IsSuccess returns true when this download database o k response has a 2xx status code
func (o *DownloadDatabaseOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this download database o k response has a 3xx status code
func (o *DownloadDatabaseOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this download database o k response has a 4xx status code
func (o *DownloadDatabaseOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this download database o k response has a 5xx status code
func (o *DownloadDatabaseOK) IsServerError() bool {
	return false
}

// IsCode returns true when this download database o k response a status code equal to that given
func (o *DownloadDatabaseOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the download database o k response
func (o *DownloadDatabaseOK) Code() int {
	return 200
}

func (o *DownloadDatabaseOK) Error() string {
	return fmt.Sprintf("[GET /databases/{id}/download][%d] downloadDatabaseOK  %+v", 200, o.Payload)
}

func (o *DownloadDatabaseOK) String() string {
	return fmt.Sprintf("[GET /databases/{id}/download][%d] downloadDatabaseOK  %+v", 200, o.Payload)
}

func (o *DownloadDatabaseOK) GetPayload() []uint8 {
	return o.Payload
}

func (o *DownloadDatabaseOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDownloadDatabaseUnauthorized creates a DownloadDatabaseUnauthorized with default headers values
func NewDownloadDatabaseUnauthorized() *DownloadDatabaseUnauthorized {
	return &DownloadDatabaseUnauthorized{}
}

/*
DownloadDatabaseUnauthorized describes a response with status code 401, with default header values.

DownloadDatabaseUnauthorized download database unauthorized
*/
type DownloadDatabaseUnauthorized struct {
}

// IsSuccess returns true when this download database unauthorized response has a 2xx status code
func (o *DownloadDatabaseUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this download database unauthorized response has a 3xx status code
func (o *DownloadDatabaseUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this download database unauthorized response has a 4xx status code
func (o *DownloadDatabaseUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this download database unauthorized response has a 5xx status code
func (o *DownloadDatabaseUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this download database unauthorized response a status code equal to that given
func (o *DownloadDatabaseUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the download database unauthorized response
func (o *DownloadDatabaseUnauthorized) Code() int {
	return 401
}

func (o *DownloadDatabaseUnauthorized) Error() string {
	return fmt.Sprintf("[GET /databases/{id}/download][%d] downloadDatabaseUnauthorized ", 401)
}

func (o *DownloadDatabaseUnauthorized) String() string {
	return fmt.Sprintf("[GET /databases/{id}/download][%d] downloadDatabaseUnauthorized ", 401)
}

func (o *DownloadDatabaseUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDownloadDatabaseForbidden creates a DownloadDatabaseForbidden with default headers values
func NewDownloadDatabaseForbidden() *DownloadDatabaseForbidden {
	return &DownloadDatabaseForbidden{}
}

/*
DownloadDatabaseForbidden describes a response with status code 403, with default header values.

DownloadDatabaseForbidden download database forbidden
*/
type DownloadDatabaseForbidden struct {
}

// IsSuccess returns true when this download database forbidden response has a 2xx status code
func (o *DownloadDatabaseForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this download database forbidden response has a 3xx status code
func (o *DownloadDatabaseForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this download database forbidden response has a 4xx status code
func (o *DownloadDatabaseForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this download database forbidden response has a 5xx status code
func (o *DownloadDatabaseForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this download database forbidden response a status code equal to that given
func (o *DownloadDatabaseForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the download database forbidden response
func (o *DownloadDatabaseForbidden) Code() int {
	return 403
}

func (o *DownloadDatabaseForbidden) Error() string {
	return fmt.Sprintf("[GET /databases/{id}/download][%d] downloadDatabaseForbidden ", 403)
}

func (o *DownloadDatabaseForbidden) String() string {
	return fmt.Sprintf("[GET /databases/{id}/download][%d] downloadDatabaseForbidden ", 403)
}

func (o *DownloadDatabaseForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDownloadDatabaseNotFound creates a DownloadDatabaseNotFound with default headers values
func NewDownloadDatabaseNotFound() *DownloadDatabaseNotFound {
	return &DownloadDatabaseNotFound{}
}

/*
DownloadDatabaseNotFound describes a response with status code 404, with default header values.

DownloadDatabaseNotFound download database not found
*/
type DownloadDatabaseNotFound struct {
}

// IsSuccess returns true when this download database not found response has a 2xx status code
func (o *DownloadDatabaseNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this download database not found response has a 3xx status code
func (o *DownloadDatabaseNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this download database not found response has a 4xx status code
func (o *DownloadDatabaseNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this download database not found response has a 5xx status code
func (o *DownloadDatabaseNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this download database not found response a status code equal to that given
func (o *DownloadDatabaseNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the download database not found response
func (o *DownloadDatabaseNotFound) Code() int {
	return 404
}

func (o *DownloadDatabaseNotFound) Error() string {
	return fmt.Sprintf("[GET /databases/{id}/download][%d] downloadDatabaseNotFound ", 404)
}

func (o *DownloadDatabaseNotFound) String() string {
	return fmt.Sprintf("[GET /databases/{id}/download][%d] downloadDatabaseNotFound ", 404)
}

func (o *DownloadDatabaseNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDownloadDatabaseUnsupportedMediaType creates a DownloadDatabaseUnsupportedMediaType with default headers values
func NewDownloadDatabaseUnsupportedMediaType() *DownloadDatabaseUnsupportedMediaType {
	return &DownloadDatabaseUnsupportedMediaType{}
}

/*
DownloadDatabaseUnsupportedMediaType describes a response with status code 415, with default header values.

DownloadDatabaseUnsupportedMediaType download database unsupported media type
*/
type DownloadDatabaseUnsupportedMediaType struct {
}

// IsSuccess returns true when this download database unsupported media type response has a 2xx status code
func (o *DownloadDatabaseUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this download database unsupported media type response has a 3xx status code
func (o *DownloadDatabaseUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this download database unsupported media type response has a 4xx status code
func (o *DownloadDatabaseUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this download database unsupported media type response has a 5xx status code
func (o *DownloadDatabaseUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this download database unsupported media type response a status code equal to that given
func (o *DownloadDatabaseUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

// Code gets the status code for the download database unsupported media type response
func (o *DownloadDatabaseUnsupportedMediaType) Code() int {
	return 415
}

func (o *DownloadDatabaseUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /databases/{id}/download][%d] downloadDatabaseUnsupportedMediaType ", 415)
}

func (o *DownloadDatabaseUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /databases/{id}/download][%d] downloadDatabaseUnsupportedMediaType ", 415)
}

func (o *DownloadDatabaseUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
