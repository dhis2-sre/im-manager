// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dhis2-sre/im-manager/swagger/sdk/models"
)

// FindByIDDecryptedReader is a Reader for the FindByIDDecrypted structure.
type FindByIDDecryptedReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FindByIDDecryptedReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFindByIDDecryptedOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewFindByIDDecryptedUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewFindByIDDecryptedForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewFindByIDDecryptedNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewFindByIDDecryptedUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewFindByIDDecryptedOK creates a FindByIDDecryptedOK with default headers values
func NewFindByIDDecryptedOK() *FindByIDDecryptedOK {
	return &FindByIDDecryptedOK{}
}

/*
FindByIDDecryptedOK describes a response with status code 200, with default header values.

Instance
*/
type FindByIDDecryptedOK struct {
	Payload *models.Instance
}

// IsSuccess returns true when this find by Id decrypted o k response has a 2xx status code
func (o *FindByIDDecryptedOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this find by Id decrypted o k response has a 3xx status code
func (o *FindByIDDecryptedOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this find by Id decrypted o k response has a 4xx status code
func (o *FindByIDDecryptedOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this find by Id decrypted o k response has a 5xx status code
func (o *FindByIDDecryptedOK) IsServerError() bool {
	return false
}

// IsCode returns true when this find by Id decrypted o k response a status code equal to that given
func (o *FindByIDDecryptedOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the find by Id decrypted o k response
func (o *FindByIDDecryptedOK) Code() int {
	return 200
}

func (o *FindByIDDecryptedOK) Error() string {
	return fmt.Sprintf("[GET /instances/{id}/parameters][%d] findByIdDecryptedOK  %+v", 200, o.Payload)
}

func (o *FindByIDDecryptedOK) String() string {
	return fmt.Sprintf("[GET /instances/{id}/parameters][%d] findByIdDecryptedOK  %+v", 200, o.Payload)
}

func (o *FindByIDDecryptedOK) GetPayload() *models.Instance {
	return o.Payload
}

func (o *FindByIDDecryptedOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Instance)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFindByIDDecryptedUnauthorized creates a FindByIDDecryptedUnauthorized with default headers values
func NewFindByIDDecryptedUnauthorized() *FindByIDDecryptedUnauthorized {
	return &FindByIDDecryptedUnauthorized{}
}

/*
FindByIDDecryptedUnauthorized describes a response with status code 401, with default header values.

FindByIDDecryptedUnauthorized find by Id decrypted unauthorized
*/
type FindByIDDecryptedUnauthorized struct {
}

// IsSuccess returns true when this find by Id decrypted unauthorized response has a 2xx status code
func (o *FindByIDDecryptedUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this find by Id decrypted unauthorized response has a 3xx status code
func (o *FindByIDDecryptedUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this find by Id decrypted unauthorized response has a 4xx status code
func (o *FindByIDDecryptedUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this find by Id decrypted unauthorized response has a 5xx status code
func (o *FindByIDDecryptedUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this find by Id decrypted unauthorized response a status code equal to that given
func (o *FindByIDDecryptedUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the find by Id decrypted unauthorized response
func (o *FindByIDDecryptedUnauthorized) Code() int {
	return 401
}

func (o *FindByIDDecryptedUnauthorized) Error() string {
	return fmt.Sprintf("[GET /instances/{id}/parameters][%d] findByIdDecryptedUnauthorized ", 401)
}

func (o *FindByIDDecryptedUnauthorized) String() string {
	return fmt.Sprintf("[GET /instances/{id}/parameters][%d] findByIdDecryptedUnauthorized ", 401)
}

func (o *FindByIDDecryptedUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFindByIDDecryptedForbidden creates a FindByIDDecryptedForbidden with default headers values
func NewFindByIDDecryptedForbidden() *FindByIDDecryptedForbidden {
	return &FindByIDDecryptedForbidden{}
}

/*
FindByIDDecryptedForbidden describes a response with status code 403, with default header values.

FindByIDDecryptedForbidden find by Id decrypted forbidden
*/
type FindByIDDecryptedForbidden struct {
}

// IsSuccess returns true when this find by Id decrypted forbidden response has a 2xx status code
func (o *FindByIDDecryptedForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this find by Id decrypted forbidden response has a 3xx status code
func (o *FindByIDDecryptedForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this find by Id decrypted forbidden response has a 4xx status code
func (o *FindByIDDecryptedForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this find by Id decrypted forbidden response has a 5xx status code
func (o *FindByIDDecryptedForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this find by Id decrypted forbidden response a status code equal to that given
func (o *FindByIDDecryptedForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the find by Id decrypted forbidden response
func (o *FindByIDDecryptedForbidden) Code() int {
	return 403
}

func (o *FindByIDDecryptedForbidden) Error() string {
	return fmt.Sprintf("[GET /instances/{id}/parameters][%d] findByIdDecryptedForbidden ", 403)
}

func (o *FindByIDDecryptedForbidden) String() string {
	return fmt.Sprintf("[GET /instances/{id}/parameters][%d] findByIdDecryptedForbidden ", 403)
}

func (o *FindByIDDecryptedForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFindByIDDecryptedNotFound creates a FindByIDDecryptedNotFound with default headers values
func NewFindByIDDecryptedNotFound() *FindByIDDecryptedNotFound {
	return &FindByIDDecryptedNotFound{}
}

/*
FindByIDDecryptedNotFound describes a response with status code 404, with default header values.

FindByIDDecryptedNotFound find by Id decrypted not found
*/
type FindByIDDecryptedNotFound struct {
}

// IsSuccess returns true when this find by Id decrypted not found response has a 2xx status code
func (o *FindByIDDecryptedNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this find by Id decrypted not found response has a 3xx status code
func (o *FindByIDDecryptedNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this find by Id decrypted not found response has a 4xx status code
func (o *FindByIDDecryptedNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this find by Id decrypted not found response has a 5xx status code
func (o *FindByIDDecryptedNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this find by Id decrypted not found response a status code equal to that given
func (o *FindByIDDecryptedNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the find by Id decrypted not found response
func (o *FindByIDDecryptedNotFound) Code() int {
	return 404
}

func (o *FindByIDDecryptedNotFound) Error() string {
	return fmt.Sprintf("[GET /instances/{id}/parameters][%d] findByIdDecryptedNotFound ", 404)
}

func (o *FindByIDDecryptedNotFound) String() string {
	return fmt.Sprintf("[GET /instances/{id}/parameters][%d] findByIdDecryptedNotFound ", 404)
}

func (o *FindByIDDecryptedNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFindByIDDecryptedUnsupportedMediaType creates a FindByIDDecryptedUnsupportedMediaType with default headers values
func NewFindByIDDecryptedUnsupportedMediaType() *FindByIDDecryptedUnsupportedMediaType {
	return &FindByIDDecryptedUnsupportedMediaType{}
}

/*
FindByIDDecryptedUnsupportedMediaType describes a response with status code 415, with default header values.

FindByIDDecryptedUnsupportedMediaType find by Id decrypted unsupported media type
*/
type FindByIDDecryptedUnsupportedMediaType struct {
}

// IsSuccess returns true when this find by Id decrypted unsupported media type response has a 2xx status code
func (o *FindByIDDecryptedUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this find by Id decrypted unsupported media type response has a 3xx status code
func (o *FindByIDDecryptedUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this find by Id decrypted unsupported media type response has a 4xx status code
func (o *FindByIDDecryptedUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this find by Id decrypted unsupported media type response has a 5xx status code
func (o *FindByIDDecryptedUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this find by Id decrypted unsupported media type response a status code equal to that given
func (o *FindByIDDecryptedUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

// Code gets the status code for the find by Id decrypted unsupported media type response
func (o *FindByIDDecryptedUnsupportedMediaType) Code() int {
	return 415
}

func (o *FindByIDDecryptedUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /instances/{id}/parameters][%d] findByIdDecryptedUnsupportedMediaType ", 415)
}

func (o *FindByIDDecryptedUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /instances/{id}/parameters][%d] findByIdDecryptedUnsupportedMediaType ", 415)
}

func (o *FindByIDDecryptedUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
