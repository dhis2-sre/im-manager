# consumedParameters: DATABASE_USERNAME, DATABASE_PASSWORD, DATABASE_NAME, DATABASE_HOSTNAME
# hostnameVariable: DATABASE_HOSTNAME
# stackParameters: GOOGLE_AUTH_PROJECT_ID,GOOGLE_AUTH_PRIVATE_KEY_ID,GOOGLE_AUTH_PRIVATE_KEY,GOOGLE_AUTH_CLIENT_EMAIL,GOOGLE_AUTH_CLIENT_ID
releases:
  - name: "{{ requiredEnv "INSTANCE_NAME" }}"
    namespace: "{{ requiredEnv "INSTANCE_NAMESPACE" }}"
    chart: dhis2/core
    version: "{{ requiredEnv "CHART_VERSION" }}"
    values:
      - image:
          repository: dhis2/{{ requiredEnv "IMAGE_REPOSITORY" }}
          tag: "{{ requiredEnv "IMAGE_TAG" }}"
          pullPolicy: {{ requiredEnv "IMAGE_PULL_POLICY" }}
      - ingress:
          enabled: true
          hostname: {{ requiredEnv "INSTANCE_HOSTNAME" }}
          path: /{{ requiredEnv "INSTANCE_NAME" }}
          certIssuer: cert-issuer-prod
          annotations:
            nginx.ingress.kubernetes.io/proxy-body-size: 128m
      - dhis2Home: "{{ requiredEnv "DHIS2_HOME" }}"
      - catalinaOpts: "-Dcontext.path=/{{ requiredEnv "INSTANCE_NAME" }}"
      - javaOpts: "{{ requiredEnv "JAVA_OPTS" }}"
      - minReadySeconds: {{ requiredEnv "MIN_READY_SECONDS" }}
      - startupProbe:
          failureThreshold: {{ requiredEnv "STARTUP_PROBE_FAILURE_THRESHOLD" }}
          periodSeconds: {{ requiredEnv "STARTUP_PROBE_PERIOD_SECONDS" }}
          path: /{{ requiredEnv "INSTANCE_NAME" }}
      - livenessProbe:
          timeoutSeconds: {{ requiredEnv "LIVENESS_PROBE_TIMEOUT_SECONDS" }}
          path: /{{ requiredEnv "INSTANCE_NAME" }}
      - readinessProbe:
          timeoutSeconds: {{ requiredEnv "READINESS_PROBE_TIMEOUT_SECONDS" }}
          path: /{{ requiredEnv "INSTANCE_NAME" }}
      - commonLabels:
          im: "true"
          im-default: "true"
          im-deployment-id: "{{ requiredEnv "DEPLOYMENT_ID" }}"
          im-instance-id: "{{ requiredEnv "INSTANCE_ID" }}"
          im-id: "{{ requiredEnv "INSTANCE_ID" }}"
          im-type: "dhis2"
          im-creation-timestamp: "{{ requiredEnv "INSTANCE_CREATION_TIMESTAMP" }}"
          im-ttl: "{{ requiredEnv "INSTANCE_TTL" }}"
      - dhisConfig: |
          connection.dialect = org.hibernate.dialect.PostgreSQLDialect
          connection.driver_class = org.postgresql.Driver
          connection.url = jdbc:postgresql://{{ requiredEnv "DATABASE_HOSTNAME" }}/{{ requiredEnv "DATABASE_NAME" }}
          connection.username = {{ requiredEnv "DATABASE_USERNAME" }}
          connection.password = {{ requiredEnv "DATABASE_PASSWORD" }}
          # Database schema behavior, can be validate, update, create, create-drop
          connection.schema = update
          # Server base URL
          server.base.url = https://{{ requiredEnv "INSTANCE_HOSTNAME" }}/{{ requiredEnv "INSTANCE_NAME" }}
          # This will ensure the secure property of the JSESSIONID cookie is set to true
          server.https = on
          flyway.migrate_out_of_order = {{ requiredEnv "FLYWAY_MIGRATE_OUT_OF_ORDER" }}
          flyway.repair_before_migration = {{ requiredEnv "FLYWAY_REPAIR_BEFORE_MIGRATION" }}
      - googleAuth:
          projectId: "{{ requiredEnv "GOOGLE_AUTH_PROJECT_ID" }}"
          privateKeyId: "{{ requiredEnv "GOOGLE_AUTH_PRIVATE_KEY_ID" }}"
          privateKey: '{{ requiredEnv "GOOGLE_AUTH_PRIVATE_KEY" }}'
          clientEmail: "{{ requiredEnv "GOOGLE_AUTH_CLIENT_EMAIL" }}"
          clientId: "{{ requiredEnv "GOOGLE_AUTH_CLIENT_ID" }}"
      - resources:
          requests:
            cpu: {{ requiredEnv "RESOURCES_REQUESTS_CPU" }}
            memory: {{ requiredEnv "RESOURCES_REQUESTS_MEMORY" }}
      - storage:
          persisted: {{ requiredEnv "ENABLE_PERSISTENT_STORAGE" }}
          volumeSize: {{ requiredEnv "PERSISTENT_STORAGE_VOLUME_SIZE" }}

repositories:
  - name: dhis2
    url: https://dhis2-sre.github.io/dhis2-core-helm
