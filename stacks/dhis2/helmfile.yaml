# stackParameters: DATABASE_MANAGER_URL,GOOGLE_AUTH_PROJECT_ID,GOOGLE_AUTH_PRIVATE_KEY_ID,GOOGLE_AUTH_PRIVATE_KEY,GOOGLE_AUTH_CLIENT_EMAIL,GOOGLE_AUTH_CLIENT_ID
releases:
  - name: "{{ requiredEnv "INSTANCE_NAME" }}"
    namespace: "{{ requiredEnv "INSTANCE_NAMESPACE" }}"
    chart: dhis2/core
    version: "{{ env "CHART_VERSION" | default "0.10.1" }}"
    values:
      - image:
          repository: dhis2/{{ env "IMAGE_REPOSITORY" | default "core" }}
          tag: "{{ env "IMAGE_TAG" | default "2.36.0-tomcat-8.5.34-jre8-alpine" }}"
          pullPolicy: {{ env "IMAGE_PULL_POLICY" | default "IfNotPresent" }}
      - ingress:
          enabled: true
          hostname: {{ requiredEnv "INSTANCE_HOSTNAME" }}
          path: /{{ requiredEnv "INSTANCE_NAME" }}
          certIssuer: cert-issuer-prod
      - catalinaOpts: "-Dcontext.path=/{{ requiredEnv "INSTANCE_NAME" }}"
      - javaOpts: "{{ env "JAVA_OPTS" | default "" }}"
      - startupProbe:
          failureThreshold: {{ env "STARTUP_PROBE_FAILURE_THRESHOLD" | default 26 }}
          periodSeconds: {{ env "STARTUP_PROBE_PERIOD_SECONDS" | default 5 }}
          path: /{{ requiredEnv "INSTANCE_NAME" }}
      - livenessProbe:
          path: /{{ requiredEnv "INSTANCE_NAME" }}
      - readinessProbe:
          path: /{{ requiredEnv "INSTANCE_NAME" }}
      - podLabels:
          im: "true"
          im-id: "{{ requiredEnv "INSTANCE_ID" }}"
          im-ttl: "{{ env "INSTANCE_TTL" | default "" }}"
      - dhisConfig: |
          connection.dialect = org.hibernate.dialect.PostgreSQLDialect
          connection.driver_class = org.postgresql.Driver
          connection.url = jdbc:postgresql://{{ requiredEnv "INSTANCE_NAME" }}-database-postgresql.{{ requiredEnv "INSTANCE_NAMESPACE" }}.svc/{{ env "DATABASE_NAME" | default "dhis2" }}
          connection.username = {{ env "DATABASE_USERNAME" | default "dhis" }}
          connection.password = {{ env "DATABASE_PASSWORD" | default "dhis" }}
          # Database schema behavior, can be validate, update, create, create-drop
          connection.schema = update
          # Server base URL
          server.base.url = https://{{ requiredEnv "INSTANCE_HOSTNAME" }}/{{ requiredEnv "INSTANCE_NAME" }}
          flyway.migrate_out_of_order = {{ env "FLYWAY_MIGRATE_OUT_OF_ORDER" | default false }}
          flyway.repair_before_migration = {{ env "FLYWAY_REPAIR_BEFORE_MIGRATION" | default false }}
      - googleAuth:
          projectId: "{{ env "GOOGLE_AUTH_PROJECT_ID" | default "" }}"
          privateKeyId: "{{ env "GOOGLE_AUTH_PRIVATE_KEY_ID" | default "" }}"
          privateKey: {{ env "GOOGLE_AUTH_PRIVATE_KEY" | default "" }}
          clientEmail: "{{ env "GOOGLE_AUTH_CLIENT_EMAIL" | default "" }}"
          clientId: "{{ env "GOOGLE_AUTH_CLIENT_ID" | default "" }}"

  - name: {{ requiredEnv "INSTANCE_NAME" }}-database
    namespace: "{{ requiredEnv "INSTANCE_NAMESPACE" }}"
    chart: bitnami/postgresql
    version: 11.0.4
    verify: false
    values:
      - primary:
          podLabels:
            im-data-id: "{{ requiredEnv "INSTANCE_ID" }}"

          extraEnvVars:
            - name: DATABASE_MANAGER_URL
              value: {{ requiredEnv "DATABASE_MANAGER_URL" }}
            - name: DATABASE_ID
              value: "{{ requiredEnv "DATABASE_ID" }}"
            - name: IM_ACCESS_TOKEN
              value: {{ requiredEnv "IM_ACCESS_TOKEN" }}
            - name: DATABASE_USERNAME
              value: {{ env "DATABASE_USERNAME" | default "dhis" }}
            - name: DATABASE_PASSWORD
              value: {{ env "DATABASE_PASSWORD" | default "dhis" }}
            - name: DATABASE_NAME
              value: {{ env "DATABASE_NAME" | default "dhis2" }}

          persistence:
            size: {{ env "DATABASE_SIZE" | default "5Gi" }}

          initdb:
            scripts:
              seed.sh: |
                {{- readFile "./seed.sh" | indent 16 }}

      - image:
          tag: {{ env "DATABASE_VERSION" | default 13 }}

      - auth:
          username: {{ env "DATABASE_USERNAME" | default "dhis" }}
          password: {{ env "DATABASE_PASSWORD" | default "dhis" }}
          database: {{ env "DATABASE_NAME" | default "dhis2" }}

  - name: {{ requiredEnv "INSTANCE_NAME" }}-pgadmin
    namespace: "{{ requiredEnv "INSTANCE_NAMESPACE" }}"
    chart: runix/pgadmin4
    version: "{{ env "PGADMIN_CHART_VERSION" | default "1.9.10" }}"
    installed: {{ env "PGADMIN_INSTALL" | default "false" }}
    values:
      - ingress:
          enabled: true
          hosts:
            - host: {{ requiredEnv "INSTANCE_HOSTNAME" }}
              paths:
                - path: /{{ requiredEnv "INSTANCE_NAME" }}/pgadmin
                  pathType: Prefix
          annotations:
            cert-manager.io/cluster-issuer: cert-issuer-prod
            ingress.kubernetes.io/ssl-redirect: "true"
          tls:
            - secretName: {{ requiredEnv "INSTANCE_HOSTNAME" | replace "." "-" }}-tls
              hosts:
                - {{ requiredEnv "INSTANCE_HOSTNAME" | quote }}
      - env:
          # TODO: https://jira.dhis2.org/browse/DEVOPS-136
          email: {{ env "PGADMIN_USERNAME" | default "someone@something.org" }}
          password: {{ env "PGADMIN_PASSWORD" | default "somethingsomething" }}
          contextPath: /{{ requiredEnv "INSTANCE_NAME" }}/pgadmin
      - serverDefinitions:
          enabled: true
          servers:
            server:
              Name: {{ requiredEnv "INSTANCE_NAME" }}
              Group: Servers
              Port: 5432
              Username: {{ env "DATABASE_USERNAME" | default "dhis" }}
              Host: {{ requiredEnv "INSTANCE_NAME" }}-database-postgresql.{{ requiredEnv "INSTANCE_NAMESPACE" }}.svc
              SSLMode: prefer
              MaintenanceDB: {{ env "DATABASE_NAME" | default "dhis2" }}

repositories:
  - name: bitnami
    url: https://charts.bitnami.com/bitnami
  - name: dhis2
    url: https://dhis2-sre.github.io/dhis2-core-helm
  - name: runix
    url: https://helm.runix.net
